import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as n,b as t}from"./app-DQhFOUgs.js";const e={},i=t(`<h1 id="mainigie" tabindex="-1"><a class="header-anchor" href="#mainigie"><span>Mainīgie</span></a></h1><p>Mainīgajiem nav jāpieraksta to veids, bet mainīgo nosaukumam priekšā jāraksta vārdu <code>let</code>.</p><p>Ir diezgan svarīga atšķirība, jo literatūrā parādās apzīmējums <code>var</code>, bet šis apzīmējums ir novecojis un to vairs neizmanto.</p><p>Piemērs:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// Skaitlisks mainīgais</span>

<span class="token keyword">let</span> vards <span class="token operator">=</span> <span class="token string">&quot;Mans vārds ir Pēteris&quot;</span><span class="token punctuation">;</span> <span class="token comment">// Tekstuāls mainīgais</span>

<span class="token keyword">let</span> atzimes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Skaitlisks masīvs</span>

<span class="token keyword">let</span> teksta_masivs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Krūmi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Koks&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Stabs&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Tekstuāls masīvs</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Skaitliskos mainīgos no tekstuālajiem mainīgajiem atšķir ar pēdiņu lietojumu. Decimālie skaitļi tieši tāpat tiek pierakstīti kā veselie skaitļi,bet izmanto punktu tam paredzētajā vietā.</p><p>Daži piemēri skaitliskajiem mainīgajiem.</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> maingaisviens <span class="token operator">=</span> <span class="token number">1124123</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> pi <span class="token operator">=</span> <span class="token number">3.14159265359</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Tekstuālos mainīgos pievieno ar pēdiņām. Tekstu raksta starp pēdīņām. {: .alert .alert-warning}</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token keyword">let</span> garss_teksts <span class="token operator">=</span> <span class="token string">&quot;Javscript ir programmēšanas valoda, bet HTML nav.&quot;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="masivi" tabindex="-1"><a class="header-anchor" href="#masivi"><span>Masīvi</span></a></h1><p>Masīvus pielieto, lai apvienotu vairākus mainīgos vienā. Skatām piemēru. {: .alert .alert-warning}</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token keyword">let</span> pirmais <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> otrais <span class="token operator">=</span>  <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> tresais  <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ir redzams, ka tiek veidoti 3 mainīgie. Šos trīs mainīgos varam apvienot vienā masīvā.</p><p>Masīvā katru elementu raksta atdalot ar komatu. Sāk rakstīt ar <code>[</code> un noslēdz ar <code>]</code> {: .alert .alert-warning}</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token keyword">let</span> skaitli <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Iepriekš, lai izmantotu mainīgo, rakstījām tā vārdu,bet izmantot masīva konkrētos elementus var, saucot tā nosaukumu un kvādrātiekavās tā indeksu.</p><p>Indekss - elementa kārtas skaitlis masīvā. Masīvā indeksus sāk skaitīt no 0. {: .alert .alert-warning}</p><p>Ja mēs gribam iegūt no masīva, ar nosaukumu <code>skaitli</code>, trešo elementu, kurš vienāds ar <code>3</code>, tad raksta komandu <code>skaitli[2]</code>.</p><p>Tieši tāpat kā notiek skaitlisko masīvu veidošana, tiek veidoti arī tekstuālie. Piemērā dots masīvs ar skolas priekšmetu nosaukumiem.</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token keyword">let</span> prieksmeti <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Latviešu valoda&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Sports&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Programmēšana&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Datorika&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Matemātika&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Lai iegūtu programmēšanas priekšmetu no masīva, raksta komandu <code>prieksmeti[2]</code>, jo šis elements masīvā (skaitot no 0 indeksa) ir otrais.</p><p>Masīvos var tikt miksēti tekstuālie elementi un skaitliskie elementi. {: .alert .alert-info}</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token keyword">let</span> prieksmeti <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Latviešu valoda&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;Programmēšana&quot;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6543</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="json" tabindex="-1"><a class="header-anchor" href="#json"><span>JSON</span></a></h1><p>JSON jeb JavaScript Object Notation ir datu turēšanas veids. Veids kā var tikt strukturēti dati objektā. JSON formāts ļauj drošā struktūrā pārsūtīt datus no klienta uz serveri konkrētā formātā.</p><p>Piemērs:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token punctuation">{</span>
	<span class="token string-property property">&quot;skoleni&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
		<span class="token punctuation">{</span><span class="token string-property property">&quot;vards&quot;</span><span class="token operator">:</span><span class="token string">&quot;Jānis&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;uzvards&quot;</span><span class="token operator">:</span><span class="token string">&quot;Koks&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">vecums</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span><span class="token string-property property">&quot;vards&quot;</span><span class="token operator">:</span><span class="token string">&quot;Anna&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;uzvards&quot;</span><span class="token operator">:</span><span class="token string">&quot;Stabiņa&quot;</span><span class="token punctuation">}</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Šādā veidā var strukturēt datus JSON objektā.</p><p>Kā izmantot šādus datus?</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;{ &quot;vards&quot;:&quot;Valērijs Visvaris&quot;, &quot;vecums&quot;:30, &quot;pilseta&quot;:&quot;Rīga&quot;}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Lai iegūtu datus no šī objekta izmanto mainīgā nosaukumu un atslēgu:</span>

<span class="token function">alert</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>vards <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> obj<span class="token punctuation">.</span>pilseta<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Paziņojumā tiks paziņots vārds un pilsēta.</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ja mums ir vairāki elementi objektā:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;[ { &quot;vards&quot;:&quot;Valērijs Visvaris&quot;, &quot;vecums&quot;:30, &quot;pilseta&quot;:&quot;Rīga&quot;},{ &quot;vards&quot;:&quot;Anna Bauma&quot;, &quot;vecums&quot;:12, &quot;pilseta&quot;:&quot;Rīga&quot;} ]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> obj<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>vards<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Konsolē tiks izdrukāti visi elementi objektā ar atslēgu <code>vards</code>.</p><p>Ja ir vairāki kā viens elements objektā, objekts sākas ar [ un beidzas ar ], jo tas ir masīvs. {: .alert .alert-warning}</p>`,35),p=[i];function o(r,l){return s(),n("div",null,p)}const d=a(e,[["render",o],["__file","mainigie.html.vue"]]),k=JSON.parse('{"path":"/programmesana/js/mainigie.html","title":"Mainīgie, masīvi, JSON","lang":"en-US","frontmatter":{"title":"Mainīgie, masīvi, JSON","description":"Mainīgie Mainīgajiem nav jāpieraksta to veids, bet mainīgo nosaukumam priekšā jāraksta vārdu let. Ir diezgan svarīga atšķirība, jo literatūrā parādās apzīmējums var, bet šis apz...","head":[["meta",{"property":"og:url","content":"https://prog.kmu.lv/programmesana/js/mainigie.html"}],["meta",{"property":"og:site_name","content":"Proghelp"}],["meta",{"property":"og:title","content":"Mainīgie, masīvi, JSON"}],["meta",{"property":"og:description","content":"Mainīgie Mainīgajiem nav jāpieraksta to veids, bet mainīgo nosaukumam priekšā jāraksta vārdu let. Ir diezgan svarīga atšķirība, jo literatūrā parādās apzīmējums var, bet šis apz..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Kristaps Muižnieks"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Mainīgie, masīvi, JSON\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kristaps Muižnieks\\",\\"url\\":\\"\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.55,"words":465},"filePathRelative":"programmesana/js/mainigie.md","autoDesc":true}');export{d as comp,k as data};
