import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as n,b as t}from"./app-DQhFOUgs.js";const e={},i=t(`<h1 id="failu-lasisana-rakstisana" tabindex="-1"><a class="header-anchor" href="#failu-lasisana-rakstisana"><span>Failu - lasīšana, rakstīšana</span></a></h1><p>Python programmēšanas valoda ļauj nolasīt failus un to saturu.</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    dati<span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Kur data.txt ir faila nosaukums (jāatrodas tajā pašā mapē, kur atrodas <code>.py</code> fails), <code>r</code> parametrs norāda, ka fails tiek lasīts - read. Savukārt, mainīgais <code>dati</code> saturēs vārdnīcu ar rindām no faila.</p><p>Ierakstīt failā:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    dati<span class="token operator">=</span> <span class="token string">&#39;Šo tekstu ierakstīt failā&#39;</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>dati<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Šajā gadījumā tiek ierakstīts failā teksts - pārrakstot faila saturu.</p><p>Ierakstīt failā:</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;data.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    dati<span class="token operator">=</span> <span class="token string">&#39;Šo tekstu ierakstīt failā&#39;</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>dati<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pēc darbībām ar failu, neaizmirsti to aizvērt ar <code>f.close()</code>! Citādi izmaiņas nebūs redzamas!</p><p>Lasot failus, ērti pielietot for ciklu</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">for</span> rinda <span class="token keyword">in</span> f<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>rinda<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Lai vairākkārt cikliski varētu nolasīt failu, nepieciešams atgriezties faila sākumā ar <code>f.seek(0)</code></p>`,13),p=[i];function o(r,l){return s(),n("div",null,p)}const d=a(e,[["render",o],["__file","faili.html.vue"]]),k=JSON.parse('{"path":"/programmesana/python/faili.html","title":"Failu lasīšana/rakstīšana","lang":"en-US","frontmatter":{"title":"Failu lasīšana/rakstīšana","description":"Failu - lasīšana, rakstīšana Python programmēšanas valoda ļauj nolasīt failus un to saturu. Kur data.txt ir faila nosaukums (jāatrodas tajā pašā mapē, kur atrodas .py fails), r ...","head":[["meta",{"property":"og:url","content":"https://prog.kmu.lv/programmesana/python/faili.html"}],["meta",{"property":"og:site_name","content":"Proghelp"}],["meta",{"property":"og:title","content":"Failu lasīšana/rakstīšana"}],["meta",{"property":"og:description","content":"Failu - lasīšana, rakstīšana Python programmēšanas valoda ļauj nolasīt failus un to saturu. Kur data.txt ir faila nosaukums (jāatrodas tajā pašā mapē, kur atrodas .py fails), r ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Kristaps Muižnieks"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Failu lasīšana/rakstīšana\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kristaps Muižnieks\\",\\"url\\":\\"\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":0.45,"words":134},"filePathRelative":"programmesana/python/faili.md","autoDesc":true}');export{d as comp,k as data};
