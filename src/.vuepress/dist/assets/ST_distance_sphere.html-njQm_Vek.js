import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as n,b as e}from"./app-DQhFOUgs.js";const t="/db/komandas/haversine.png",i="/db/komandas/haversine-1.png",p={},o=e('<h1 id="st-distance-sphere" tabindex="-1"><a class="header-anchor" href="#st-distance-sphere"><span>ST_distance_sphere</span></a></h1><p>Ja mums ir 2 ģēogrāfiski punkti ar ģeogrāfiskajiem platumiem un ģeogrāfiskajiem garumiem, un mēs vēlamies dabūt attālumu metros starp diviem punktiem, mums ir jaizmanto haversīna formula.</p><p><img src="'+t+'" alt="Haversīna formulas attēlojums uz riņķa"><img src="'+i+`" alt="Haversīna formula"></p><p>... bet tā formula ir ļoti sarežģīta un lai gan mēs varam viņu paši iekodēt, ir liela iespējamība, ka mēs pieļausim kļūdu, vai ka nebūs optimizēti. Tāpēc MySQL datubāze nāk ar iebūvētu komandu, kas to aprēķina.</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> ST_distance_sphere<span class="token punctuation">(</span>
	<span class="token keyword">point</span><span class="token punctuation">(</span>garums<span class="token punctuation">,</span> platums<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token keyword">point</span><span class="token punctuation">(</span>garums<span class="token punctuation">,</span> platums<span class="token punctuation">)</span>
	<span class="token comment">-- papildus arguments - metri (riņķa platums). Pēc noklusējuma MySQL ņem zemeslodes platumu (6 370 986 m).</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- atgriež attālumu metros</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="izmantosana-filtra" tabindex="-1"><a class="header-anchor" href="#izmantosana-filtra"><span>Izmantošana filtrā</span></a></h2><p>Ja mēs vēlamies atlasīt visus ģeogrāfiskos punktus 1 km attālumā no centra punkta mēs varam izmantot <code>ST_distance_sphere</code> kā filtru.</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span>
<span class="token keyword">FROM</span>
	addresses
<span class="token keyword">WHERE</span>
	ST_distance_sphere<span class="token punctuation">(</span>
		<span class="token keyword">point</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.234567</span><span class="token punctuation">,</span> <span class="token number">2.345678</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- &quot;Point Of Interest&quot; (centra punkts)</span>
		<span class="token keyword">point</span><span class="token punctuation">(</span>longitude<span class="token punctuation">,</span> latitude<span class="token punctuation">)</span>  <span class="token comment">-- longitude (ģeogrāfiskais garums) un latitude (ģeogrāfiskais platums) - kolonas tabulā</span>
	<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1000</span> <span class="token comment">-- kur attālums ir mazāks par 1 km</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="optimizacija" tabindex="-1"><a class="header-anchor" href="#optimizacija"><span>Optimizācija</span></a></h2><p>Šī komanda ir samērā smaga, tāpēc ir ieteikts <strong>vismaz</strong> izmantot <a href="/db/komandas/indeksi">indeksus</a> priekš ģeogrāfiskā garuma un platuma kolonām (<code>lon(longitude)</code>, <code>lat(latitude)</code>).</p>`,10),r=[o];function l(m,c){return s(),n("div",null,r)}const k=a(p,[["render",l],["__file","ST_distance_sphere.html.vue"]]),v=JSON.parse('{"path":"/db/komandas/ST_distance_sphere.html","title":"ST_distance_sphere","lang":"en-US","frontmatter":{"title":"ST_distance_sphere","description":"ST_distance_sphere Ja mums ir 2 ģēogrāfiski punkti ar ģeogrāfiskajiem platumiem un ģeogrāfiskajiem garumiem, un mēs vēlamies dabūt attālumu metros starp diviem punktiem, mums ir...","head":[["meta",{"property":"og:url","content":"https://prog.kmu.lv/db/komandas/ST_distance_sphere.html"}],["meta",{"property":"og:site_name","content":"Proghelp"}],["meta",{"property":"og:title","content":"ST_distance_sphere"}],["meta",{"property":"og:description","content":"ST_distance_sphere Ja mums ir 2 ģēogrāfiski punkti ar ģeogrāfiskajiem platumiem un ģeogrāfiskajiem garumiem, un mēs vēlamies dabūt attālumu metros starp diviem punktiem, mums ir..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://prog.kmu.lv/db/komandas/haversine.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Kristaps Muižnieks"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ST_distance_sphere\\",\\"image\\":[\\"https://prog.kmu.lv/db/komandas/haversine.png\\",\\"https://prog.kmu.lv/db/komandas/haversine-1.png\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kristaps Muižnieks\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"Izmantošana filtrā","slug":"izmantosana-filtra","link":"#izmantosana-filtra","children":[]},{"level":2,"title":"Optimizācija","slug":"optimizacija","link":"#optimizacija","children":[]}],"git":{},"readingTime":{"minutes":0.61,"words":183},"filePathRelative":"db/komandas/ST_distance_sphere.md","autoDesc":true}');export{k as comp,v as data};
