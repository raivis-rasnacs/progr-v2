import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,b as e}from"./app-DQhFOUgs.js";const i={},t=e(`<h1 id="cikli" tabindex="-1"><a class="header-anchor" href="#cikli"><span>Cikli</span></a></h1><p>C++ progr. valodā eksistē divu veidu cikli - noteiktie <code>for</code> un nenoteiktie <code>while</code>.</p><p>Nenoteiktais cikls.</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>int i = 0;
while (i &lt; 5) { //cikla deklarācija
  cout &lt;&lt; i &lt;&lt; &quot;\\n&quot;; //izvads
  i++; //palielinātājs
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Cikls darbosies kamēr mainīgais <code>i</code> nebūs sasniedzis vērtību 5.</p><p>Noteiktā cikla piemērs.</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><pre class="language-c++"><code>for (int i = 0; i &lt; 5; i++) {
  cout &lt;&lt; i &lt;&lt; &quot;\\n&quot;;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ciklam ir īsāks pieraksts un doti iekavās mainīgie: <code>(cikla sākums, cikla darbības ilgums, cikla solis)</code>. Cikla solis šajā piemērā ir 1.</p><p>Cikliem pielieto operatorus <code>break</code> un <code>continue</code>.</p><h2 id="break" tabindex="-1"><a class="header-anchor" href="#break"><span>Break</span></a></h2><p><code>break</code> pārtrauc ciklu pie konkrēta nosacījuma.</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
  i<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Šajā gadījumā cikls apstāsies, mainīgajam i sasniedzot vērtību 3.</p><h2 id="continue" tabindex="-1"><a class="header-anchor" href="#continue"><span>Continue</span></a></h2><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  i<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Izpildoties <code>continue</code>, cikls pāriet nākamajā iterācijā. Tas nozīmē, ka skaitlis 3 neizdrukāsies ekrānā.</p><p>Šajā gadījumā sazarojums nedrīkst būt pirms palielinātāja i++, jo tādā gadījumā būtu bezgalīgs cikls!</p>`,17),o=[t];function l(p,c){return a(),s("div",null,o)}const u=n(i,[["render",l],["__file","cikli.html.vue"]]),k=JSON.parse('{"path":"/programmesana/c__/cikli.html","title":"Cikli","lang":"en-US","frontmatter":{"title":"Cikli","description":"Cikli C++ progr. valodā eksistē divu veidu cikli - noteiktie for un nenoteiktie while. Nenoteiktais cikls. Cikls darbosies kamēr mainīgais i nebūs sasniedzis vērtību 5. Noteiktā...","head":[["meta",{"property":"og:url","content":"https://prog.kmu.lv/programmesana/c__/cikli.html"}],["meta",{"property":"og:site_name","content":"Proghelp"}],["meta",{"property":"og:title","content":"Cikli"}],["meta",{"property":"og:description","content":"Cikli C++ progr. valodā eksistē divu veidu cikli - noteiktie for un nenoteiktie while. Nenoteiktais cikls. Cikls darbosies kamēr mainīgais i nebūs sasniedzis vērtību 5. Noteiktā..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Kristaps Muižnieks"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cikli\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kristaps Muižnieks\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"Break","slug":"break","link":"#break","children":[]},{"level":2,"title":"Continue","slug":"continue","link":"#continue","children":[]}],"git":{},"readingTime":{"minutes":0.52,"words":156},"filePathRelative":"programmesana/c++/cikli.md","autoDesc":true}');export{u as comp,k as data};
