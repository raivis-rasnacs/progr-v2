import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as i,b as t}from"./app-DQhFOUgs.js";const e="/blokshema.png",n="/blokshemu_elementi.png",o="/blokshema_sazarota.png",r="/blokshema_cikliska.png",p={},l=t('<p>Datorprogrammas vienmēr ietver stingru darbību secību, ko tās izpilda pēc lietotāja pavēles. Šīs darbību secības sauc par algoritmiem un ar tiem mēs sastopamies kā datoros, tā arī ikdienā.</p><h1 id="algoritmu-pieraksta-veidi" tabindex="-1"><a class="header-anchor" href="#algoritmu-pieraksta-veidi"><span>Algoritmu pieraksta veidi</span></a></h1><p>Algoritmus var pierakstīt 3 dažādos veidos:</p><ul><li>pseidokods - secīgs darbību uzskaitījums rakstīts brīvā, bet cilvēkam saprotamā formā, kas var būt numurēts ar norādītu sākumu un beigām</li><li>blokshēma - grafiskais algoritma attēlojuma veids, kur darbības attēlotas kā figūras</li><li>programmēšanas valoda - vienīgais datoram saprotamais pieraksta veids, kur lietota speciāla sintakse</li></ul><p>Algoritmam jābūt skaidram, mērķtiecīgam un nepārprotamam!</p><p>Apskatīsim tējas pagatavošanas algoritmu, kas pierakstīts 3 dažādos veidos.</p><h2 id="pseidokods" tabindex="-1"><a class="header-anchor" href="#pseidokods"><span>Pseidokods</span></a></h2><p>SĀKUMS</p><ol><li>Paņemam tējkannu</li><li>Ielejam ūdeni</li><li>Noliekam tējkannu vietā, ieslēdzam to</li><li>Sagaidām, kamēr ūdens uzvārījies</li><li>Paņemam krūzi</li><li>Ieliekam tējas maisiņu</li><li>Ielejam ūdeni</li><li>Pieberam cukuru</li><li>Samaisam</li><li>Dzeram!</li></ol><p>BEIGAS</p><h2 id="blokshema" tabindex="-1"><a class="header-anchor" href="#blokshema"><span>Blokshēma</span></a></h2><p><img src="'+e+'" alt="blokshemas_piemers"></p><p>Blokshēmās lieto sekojošos elementus:</p><p><img src="'+n+`" alt="blokshemu_elementi"></p><h2 id="programmesanas-valoda" tabindex="-1"><a class="header-anchor" href="#programmesanas-valoda"><span>Programmēšanas valoda</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> tejkanna
<span class="token keyword">import</span> kruze

<span class="token keyword">def</span> <span class="token function">gatavojam_teju</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    tejkanna<span class="token punctuation">.</span>piepildit<span class="token punctuation">(</span><span class="token punctuation">)</span>
    tejkanna<span class="token punctuation">.</span>uzvarit<span class="token punctuation">(</span><span class="token punctuation">)</span>

    kruze<span class="token punctuation">.</span>panemt<span class="token punctuation">(</span><span class="token punctuation">)</span>
    kruze<span class="token punctuation">.</span>ielikt_maisinu<span class="token punctuation">(</span><span class="token punctuation">)</span>
    kruze<span class="token punctuation">.</span>ieliet_udeni<span class="token punctuation">(</span><span class="token punctuation">)</span>
    kruze<span class="token punctuation">.</span>piebert_cukuru<span class="token punctuation">(</span><span class="token punctuation">)</span>
    kruze<span class="token punctuation">.</span>samaisit<span class="token punctuation">(</span><span class="token punctuation">)</span>
    kruze<span class="token punctuation">.</span>dzert<span class="token punctuation">(</span><span class="token punctuation">)</span>

gatavojam_teju<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">#Kodam ir ilustratīva nozīme</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Lai arī šādu kodu dators izpildīt nevarēs, tas ir uzrakstīts sintaktiski pareizi un atbilst programmēšanas valodas normām.</p><h1 id="algoritmu-izpildes-veidi" tabindex="-1"><a class="header-anchor" href="#algoritmu-izpildes-veidi"><span>Algoritmu izpildes veidi</span></a></h1><p>Algoritmus iedala <strong>lineāros</strong>, <strong>sazarotos</strong> un <strong>cikliskos</strong>.</p><p>Tējas pagatavošanas process ir lineārs algoritms, kur darbības izpilda citu pēc citas noteiktā secībā. Bet ne vienmēr tas ir iespējams.</p><p>Iedomāsimies, ka mums nav tējkannas, kur ieliet ūdeni vai cukura, ko pievienot tējai. Tāpēc nepieciešams uzlabot algoritmu, iekļaujot dažādas pārbaudes, lai pārliecinātos, vai mums ir viss nepieciešamais rezultāta sasniegšanai.</p><p><img src="`+o+'" alt="sazarota_blokshema"></p><p>Attēlā parādīta blokshēma ar zarošanās konstrukciju. Romba figūrā ir lasāms nosacījums. Ja tas ir patiess, izpildās viena darbība, ja ne - tad otra.</p><p>Bet daudzos algoritmos ir darbības, kas daudzkārt atkārtojas. Ja vēlamies tējai pievienot 3 tējkarotes cukura, tad viena darbība jāizpilda 3 reizes. To sauc par ciklu ar 3 iterācijām.</p><p>Attēlā redzama blokshēma ar ciklisku konstrukciju.</p><p>Zili iekrāsotās darbības var atkārtoties neskaitāmas reizes.</p><p><img src="'+r+'" alt="cikliska_blokshema"></p><p>Šādi algoritmu var papildināt ar vairākiem cikliem. Piemēram, ja ūdens nav gana atdzisis, tad turpinām gaidīt, līdz tas atdzisīs.</p>',28),m=[l];function u(c,d){return s(),i("div",null,m)}const v=a(p,[["render",u],["__file","algoritmi.html.vue"]]),b=JSON.parse('{"path":"/programmesana/teorija/algoritmi.html","title":"Algoritmi","lang":"en-US","frontmatter":{"title":"Algoritmi","description":"Datorprogrammas vienmēr ietver stingru darbību secību, ko tās izpilda pēc lietotāja pavēles. Šīs darbību secības sauc par algoritmiem un ar tiem mēs sastopamies kā datoros, tā a...","head":[["meta",{"property":"og:url","content":"https://prog.kmu.lv/programmesana/teorija/algoritmi.html"}],["meta",{"property":"og:site_name","content":"Proghelp"}],["meta",{"property":"og:title","content":"Algoritmi"}],["meta",{"property":"og:description","content":"Datorprogrammas vienmēr ietver stingru darbību secību, ko tās izpilda pēc lietotāja pavēles. Šīs darbību secības sauc par algoritmiem un ar tiem mēs sastopamies kā datoros, tā a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://prog.kmu.lv/blokshema.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Kristaps Muižnieks"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Algoritmi\\",\\"image\\":[\\"https://prog.kmu.lv/blokshema.png\\",\\"https://prog.kmu.lv/blokshemu_elementi.png\\",\\"https://prog.kmu.lv/blokshema_sazarota.png\\",\\"https://prog.kmu.lv/blokshema_cikliska.png\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Kristaps Muižnieks\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"Pseidokods","slug":"pseidokods","link":"#pseidokods","children":[]},{"level":2,"title":"Blokshēma","slug":"blokshema","link":"#blokshema","children":[]},{"level":2,"title":"Programmēšanas valoda","slug":"programmesanas-valoda","link":"#programmesanas-valoda","children":[]}],"git":{},"readingTime":{"minutes":1.08,"words":324},"filePathRelative":"programmesana/teorija/algoritmi.md","autoDesc":true}');export{v as comp,b as data};
